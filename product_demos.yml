---
- name: Seeding configuration for Ansible Product Demos
  hosts: localhost
  vars:
    controller_validate_certs: false
    controller_execution_environments:
      - name: Ansible Product Demos EE
        image: quay.io/acme_corp/product-demos-ee:latest
    controller_organizations:
      - name: PhilFooOrg
        default_environment:
          name: 'product-demos'
        galaxy_credentials:
          - c.r.c Staging Content
          - c.r.c Staging Validated
          - c.r.c Staging Published
    controller_inventories:
      - name: Ansible Product Demos Inventory
        organization: Default
        description: Created for Ansible Product Demos
        copy_from: Demo Inventory
    controller_projects:
      - name: Ansible Product Content Demos
        organization: Default
        scm_type: git
        scm_url: "{{ product_demos_url | default('https://github.com/ansible/product-demos') }}"
        scm_branch: "{{ product_demos_branch | default('main') }}"
        wait: true
    controller_templates:
      - name: "Multi-SETUP demos"
        project: "Ansible Product Content Demos"
        playbook: "multi_select_setup.yml"
        inventory: "CaC Inventory"
        credentials: "AAP OAuth for CaC"
        survey_enabled: true
        survey:
          name: ''
          description: ''
          spec:
            - question_name: "Which demos do you want to configure?"
              type: multiselect
              variable: demos
              required: true
              default: "cloud\nlinux\nnetwork\nopenshift\nwindows"
              choices:
                - cloud
                - linux
                - network
                - openshift
                - satellite
                - windows
        extra_vars:
          operation_translate:
            present:
              verb: "Create/Update"
              action: "creation"
            absent:
              verb: "Remove"
              action: "deletion"
            exists:
              verb: "Already Exists"
              action: "exists"
              
    user_message: "Configuration Complete"

  tasks:
  - name: Setup Components
    include_role:
      name: infra.controller_configuration.dispatch

  - name: Print Message
    debug:
      msg: "{{ user_message }}"
    when: user_message is defined
